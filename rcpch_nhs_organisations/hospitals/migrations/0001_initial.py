# Generated by Django 4.2.9 on 2024-01-20 21:22

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("boundary_identifier", models.CharField(max_length=9)),
                ("name", models.CharField(max_length=16)),
                ("welsh_name", models.CharField(max_length=17)),
                ("bng_e", models.BigIntegerField()),
                ("bng_n", models.BigIntegerField()),
                ("long", models.FloatField()),
                ("lat", models.FloatField()),
                ("globalid", models.CharField(max_length=38)),
                (
                    "geom",
                    django.contrib.gis.db.models.fields.MultiPolygonField(srid=27700),
                ),
            ],
            options={
                "verbose_name": "Country",
                "verbose_name_plural": "Countries",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="GeneralPractice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "ods_code",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "website",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "address1",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "address2",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "address3",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "telephone",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "county",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "latitude",
                    models.FloatField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                ("longitude", models.FloatField(blank=True, default=None, null=True)),
                (
                    "postcode",
                    models.CharField(
                        blank=True, default=None, max_length=10, null=True
                    ),
                ),
                (
                    "geocode_coordinates",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, default=None, null=True, srid=27700
                    ),
                ),
                ("active", models.BooleanField(default=True)),
                ("published_at", models.DateField(blank=True, default=None, null=True)),
            ],
            options={
                "verbose_name": "GeneralPractice",
                "verbose_name_plural": "GeneralPractices",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="IntegratedCareBoard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("boundary_identifier", models.CharField(max_length=9)),
                ("name", models.CharField(max_length=77)),
                ("bng_e", models.BigIntegerField()),
                ("bng_n", models.BigIntegerField()),
                ("long", models.FloatField()),
                ("lat", models.FloatField()),
                ("globalid", models.CharField(max_length=38)),
                (
                    "geom",
                    django.contrib.gis.db.models.fields.MultiPolygonField(srid=27700),
                ),
                ("ods_code", models.CharField()),
                ("publication_date", models.DateField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Integrated Care Board",
                "verbose_name_plural": "Integrated Care Boards",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="LocalHealthBoard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("boundary_identifier", models.CharField(max_length=9)),
                ("name", models.CharField(max_length=41)),
                ("welsh_name", models.CharField(max_length=40)),
                ("bng_e", models.FloatField()),
                ("bng_n", models.FloatField()),
                ("long", models.FloatField()),
                ("lat", models.FloatField()),
                ("globalid", models.CharField(max_length=38)),
                (
                    "geom",
                    django.contrib.gis.db.models.fields.MultiPolygonField(srid=27700),
                ),
                ("ods_code", models.CharField(max_length=3)),
                ("publication_date", models.DateField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Local Health Board",
                "verbose_name_plural": "Local Health Boards",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="LondonBorough",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=22)),
                ("gss_code", models.CharField(max_length=9)),
                ("hectares", models.FloatField()),
                ("nonld_area", models.FloatField()),
                ("ons_inner", models.CharField(max_length=1)),
                ("sub_2009", models.CharField(max_length=7, null=True)),
                ("sub_2006", models.CharField(max_length=10, null=True)),
                (
                    "geom",
                    django.contrib.gis.db.models.fields.MultiPolygonField(srid=27700),
                ),
            ],
            options={
                "verbose_name": "London Borough",
                "verbose_name_plural": "London Boroughs",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="NHSEnglandRegion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("boundary_identifier", models.CharField(max_length=9)),
                ("name", models.CharField(max_length=24)),
                ("bng_e", models.BigIntegerField()),
                ("bng_n", models.BigIntegerField()),
                ("long", models.FloatField()),
                ("lat", models.FloatField()),
                ("globalid", models.CharField(max_length=38)),
                (
                    "geom",
                    django.contrib.gis.db.models.fields.MultiPolygonField(srid=27700),
                ),
                ("region_code", models.CharField(blank=True, null=True, unique=True)),
                ("publication_date", models.DateField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "NHS England Region",
                "verbose_name_plural": "NHS England Regions",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="OPENUKNetwork",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField()),
                ("boundary_identifier", models.CharField(unique=True)),
                ("country", models.CharField()),
                ("publication_date", models.DateField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="record created by user in %(class)",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updated_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="record updated by user in %(class)",
                    ),
                ),
            ],
            options={
                "verbose_name": "OPENUK Network",
                "verbose_name_plural": "OPENUK Networks",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="PaediatricDiabetesUnit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "pz_code",
                    models.CharField(
                        max_length=5, verbose_name="Paediatric Diabetes Unit PZ Number"
                    ),
                ),
            ],
            options={
                "verbose_name": "Paediatric Diabetes Unit",
                "verbose_name_plural": "Paediatric Diabetes Units",
                "ordering": ("pz_code",),
            },
        ),
        migrations.CreateModel(
            name="Trust",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("ods_code", models.CharField(max_length=3, unique=True)),
                ("name", models.CharField(max_length=100)),
                (
                    "address_line_1",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                ("address_line_2", models.CharField(blank=True, max_length=100)),
                (
                    "town",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "postcode",
                    models.CharField(
                        blank=True, default=None, max_length=10, null=True
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True, default=None, max_length=50, null=True
                    ),
                ),
                (
                    "telephone",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "website",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                ("active", models.BooleanField(default=True)),
                ("published_at", models.DateField(blank=True, default=None, null=True)),
            ],
            options={
                "verbose_name": "Trust",
                "verbose_name_plural": "Trusts",
                "ordering": ("name",),
                "indexes": [
                    models.Index(
                        fields=["ods_code"], name="hospitals_t_ods_cod_a7f609_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Organisation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "ods_code",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "website",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "address1",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "address2",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "address3",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "telephone",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "county",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "latitude",
                    models.FloatField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                ("longitude", models.FloatField(blank=True, default=None, null=True)),
                (
                    "postcode",
                    models.CharField(
                        blank=True, default=None, max_length=10, null=True
                    ),
                ),
                (
                    "geocode_coordinates",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, default=None, null=True, srid=27700
                    ),
                ),
                ("active", models.BooleanField(default=True)),
                ("published_at", models.DateField(blank=True, default=None, null=True)),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="country_organisations",
                        to="hospitals.country",
                    ),
                ),
                (
                    "integrated_care_board",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="integrated_care_board_organisations",
                        to="hospitals.integratedcareboard",
                    ),
                ),
                (
                    "local_health_board",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="local_health_board_organisations",
                        to="hospitals.localhealthboard",
                    ),
                ),
                (
                    "london_borough",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="london_borough_organisations",
                        to="hospitals.londonborough",
                    ),
                ),
                (
                    "nhs_england_region",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nhs_england_region_organisations",
                        to="hospitals.nhsenglandregion",
                    ),
                ),
                (
                    "openuk_network",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="openuk_network_organisations",
                        to="hospitals.openuknetwork",
                    ),
                ),
                (
                    "paediatric_diabetes_unit",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="paediatric_diabetes_unit_organisations",
                        to="hospitals.paediatricdiabetesunit",
                    ),
                ),
                (
                    "trust",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trust_organisations",
                        to="hospitals.trust",
                    ),
                ),
            ],
            options={
                "verbose_name": "Organisation",
                "verbose_name_plural": "Organisations",
                "ordering": ("name",),
            },
        ),
        migrations.AddIndex(
            model_name="londonborough",
            index=models.Index(
                fields=["gss_code"], name="hospitals_l_gss_cod_b9ed8c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="localhealthboard",
            index=models.Index(
                fields=["ods_code"], name="hospitals_l_ods_cod_dcb93a_idx"
            ),
        ),
        migrations.AddField(
            model_name="generalpractice",
            name="country",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="hospitals.country",
            ),
        ),
        migrations.AddField(
            model_name="generalpractice",
            name="integrated_care_board",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="hospitals.integratedcareboard",
            ),
        ),
        migrations.AddField(
            model_name="generalpractice",
            name="local_health_board",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="hospitals.localhealthboard",
            ),
        ),
        migrations.AddField(
            model_name="generalpractice",
            name="london_borough",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="hospitals.londonborough",
            ),
        ),
        migrations.AddField(
            model_name="generalpractice",
            name="nhs_england_region",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="hospitals.nhsenglandregion",
            ),
        ),
        migrations.AddField(
            model_name="generalpractice",
            name="trust",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="hospitals.trust",
            ),
        ),
        migrations.AddIndex(
            model_name="country",
            index=models.Index(
                fields=["boundary_identifier"], name="hospitals_c_boundar_8d9afd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="organisation",
            index=models.Index(fields=["name"], name="hospitals_o_name_b46b36_idx"),
        ),
        migrations.AddIndex(
            model_name="generalpractice",
            index=models.Index(fields=["name"], name="hospitals_g_name_20c4cc_idx"),
        ),
    ]
